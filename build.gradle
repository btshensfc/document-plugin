buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
    }
}

version "0.1"
group "document.plugin"

//apply plugin:"eclipse"
//apply plugin:"idea"
//apply plugin:"org.grails.grails-plugin"
//apply plugin:"asset-pipeline"
//apply plugin:"org.grails.grails-gsp"
//apply plugin: "maven-publish"

plugins {
    id "eclipse"
    id "war"
    id "org.grails.grails-plugin"
    id "org.grails.grails-gsp"
    id "maven-publish"
}

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:gsp"
    implementation 'org.grails.plugins:mongodb:7.1.0'
    implementation 'org.mongodb:mongodb-driver-core:4.5.1'
    implementation project(':plugins:document-plugin')
    implementation 'com.github.btshen:document-plugin:92bcccd778c2e2e59c45db8eb2f3425b428c8827'
    //implementation "org.grails.plugins:hibernate5"
    //implementation "org.hibernate:hibernate-core:5.6.11.Final"
    profile "org.grails.profiles:web-plugin"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false



assets {
    packagePlugin = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            // Set the group ID, artifact ID, and version
            groupId = 'com.github.btshen'
            artifactId = 'temp'
            version = '0.1.0'
        }
    }

    repositories {
        maven {
            // Use JitPack's repository for publishing
            url = uri("https://jitpack.io")
        }
    }
}